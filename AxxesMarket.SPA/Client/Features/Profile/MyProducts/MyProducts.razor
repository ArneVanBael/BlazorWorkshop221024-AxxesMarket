@using AxxesMarket.SPA.Client.Features.Profile.Store
@using AxxesMarket.Shared.WebModels.Product
@inject Translator Translator
@inject BlazorHttpClient httpClient
@inherits BlazorStateComponent

<div class=" row mt-5">
    <button class="btn btn-primary" @onclick=CreateProduct>@Translator["NewProduct"]</button>
</div>
<div class="mt-3">
    <MyProductsGrid OnEditProduct=OnEditProduct />
</div>

<Modal Visible=_createEditModalVisible OnVisibleChanged=OnVisibleChanged Title="@((_itemToEdit is null || _itemToEdit.Id is null) ? Translator["NewProduct"] : Translator["UpdateProduct"])">
    <BodyContent>
        <EditProductForm IsSaving=_isSaving OnCancel=OnCancel OnValidSubmit=OnValidSubmit Request=_itemToEdit />
    </BodyContent>
</Modal>

@code {
    private bool _createEditModalVisible;
    private CreateEditProductRequest? _itemToEdit;
    private bool _isSaving;
    private bool _isLoading;

    private void CreateProduct()
    {
        _itemToEdit = new CreateEditProductRequest();
        _createEditModalVisible = true;
    }

    private async void OnEditProduct(Guid id)
    {
    }

    private void OnCancel()
    {
        _itemToEdit = null;
        _createEditModalVisible = false;
    }

    private async void OnValidSubmit(CreateEditProductRequest request)
    { 
    }

    private void OnVisibleChanged(bool visible)
    {
        if (!visible)
        {
            OnCancel();
        }
    }
}
